{"version":3,"file":"static/js/931.01139e6c.chunk.js","mappings":"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","sources":["assets/svg/icon-arrow-left.jsx","assets/svg/icon-arrow-right.jsx","base-ui/indicator/style.js","base-ui/indicator/index.jsx","components/room-item/style.js","components/room-item/index.jsx","views/entire/style.js","views/entire/c-cpns/entire-filter/style.js","views/entire/c-cpns/entire-filter/index.jsx","views/entire/c-cpns/entire-rooms/style.js","views/entire/c-cpns/entire-rooms/index.jsx","views/entire/c-cpns/entire-pagination/style.js","services/modules/entire.js","store/modules/entire/actionCreators.js","views/entire/c-cpns/entire-pagination/index.jsx","views/entire/index.jsx"],"sourcesContent":["import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowLeft = memo((props) => {\n  const { width = 12, height = 12 } = props\n\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"previous\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m13.7 16.29a1 1 0 1 1 -1.42 1.41l-8-8a1 1 0 0 1 0-1.41l8-8a1 1 0 1 1 1.42 1.41l-7.29 7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowLeft","import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowRight = memo((props) => {\n  const { width = 12, height = 12 } = props\n\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"next\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m4.29 1.71a1 1 0 1 1 1.42-1.41l8 8a1 1 0 0 1 0 1.41l-8 8a1 1 0 1 1 -1.42-1.41l7.29-7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowRight","import styled from \"styled-components\";\r\n\r\nexport const IndicatorWrapper = styled.div`\r\n  overflow: hidden;\r\n  .i-content {\r\n    display: flex;\r\n    position: relative;\r\n    transition: transform 200ms ease;\r\n    > * {\r\n      flex-shrink: 0;\r\n    }\r\n  }\r\n`","import React, {memo, useEffect, useRef} from 'react'\r\nimport {IndicatorWrapper} from \"@/base-ui/indicator/style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Indicator = memo((props) => {\r\n  const { selectIndex = 0 } = props\r\n  const contentRef = useRef()\r\n\r\n  useEffect(() => {\r\n    // 1.获取selectIndex对应的item\r\n    const selectItemEl = contentRef.current.children[selectIndex]\r\n    const itemLeft = selectItemEl.offsetLeft\r\n    const itemWidth = selectItemEl.clientWidth\r\n    // 2.content的宽度\r\n    const contentWidth = contentRef.current.clientWidth\r\n    const contentScroll = contentRef.current.scrollWidth\r\n    // 3.获取selectIndex要滚动的距离\r\n    let distance = itemLeft + itemWidth * 0.5 - contentWidth * 0.5\r\n    // 4.特殊情况的处理\r\n    if (distance < 0) distance = 0 // 左边的特殊情况处理\r\n    const totalDistance = contentScroll - contentWidth\r\n    if (distance > totalDistance) distance = totalDistance // 右边的特殊情况处理\r\n\r\n    // 5.改变位置即可\r\n    contentRef.current.style.transform = `translate(${-distance}px)`\r\n  }, [selectIndex])\r\n\r\n  return (\r\n    <IndicatorWrapper>\r\n      <div className='i-content' ref={contentRef}>\r\n        {\r\n          props.children\r\n        }\r\n      </div>\r\n    </IndicatorWrapper>\r\n  )\r\n})\r\n\r\nIndicator.propTypes = {\r\n  selectIndex: PropTypes.number\r\n}\r\n\r\nexport default Indicator","import styled from \"styled-components\";\r\n\r\n\r\nexport const ItemWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n  width: ${props => props.itemWidth};\r\n  padding: 8px;\r\n\r\n  .inner {\r\n    width: 100%;\r\n  }\r\n\r\n  .cover {\r\n    position: relative;\r\n    box-sizing: border-box;\r\n    padding: 66.66% 8px 0;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n\r\n  .slider {\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      .control {\r\n        display: flex;\r\n      }\r\n    }\r\n\r\n    .control {\r\n      position: absolute;\r\n      z-index: 1;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      display: none;\r\n      justify-content: space-between;\r\n      bottom: 0;\r\n      color: #fff;\r\n\r\n      .btn {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 83px;\r\n        height: 100%;\r\n        background: linear-gradient(to left, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n\r\n        &.right {\r\n          background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.25) 100%);\r\n        }\r\n      }\r\n    }\r\n\r\n    .indicator {\r\n      position: absolute;\r\n      z-index: 9;\r\n      bottom: 10px;\r\n      left: 0;\r\n      right: 0;\r\n      width: 30%;\r\n      margin: 0 auto;\r\n\r\n      .item {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 14.29%;\r\n\r\n        .dot {\r\n          width: 6px;\r\n          height: 6px;\r\n          background-color: #fff;\r\n          border-radius: 50%;\r\n\r\n          &.active {\r\n            width: 8px;\r\n            height: 8px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .desc {\r\n    margin: 10px 0 5px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: ${props => props.verifyColor};\r\n  }\r\n\r\n  .name {\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  .price {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  .bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    color: ${props => props.theme.text.primaryColor};\r\n\r\n    .count {\r\n      margin: 0 2px 0 4px;\r\n    }\r\n\r\n    .MuiRating-decimal {\r\n      margin-right: -2px;\r\n    }\r\n  }\r\n`","import React, { memo, useRef, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport {ItemWrapper} from \"@/components/room-item/style\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport { Carousel } from \"antd\";\r\nimport IconArrowRight from \"@/assets/svg/icon-arrow-right\";\r\nimport IconArrowLeft from \"@/assets/svg/icon-arrow-left\";\r\nimport classNames from \"classnames\";\r\nimport Indicator from \"@/base-ui/indicator\";\r\n\r\nconst RoomItem = memo((props) => {\r\n  const { itemData, itemWidth = \"25%\", itemClick } = props\r\n  const [selectIndex, setSelectIndex] = useState(0)\r\n  const sliderRef = useRef()\r\n\r\n  /** 事件处理的逻辑 */\r\n  function controlClickHandle(isNext = true, event) {\r\n    // 上一个面板/下一个面板\r\n    isNext ? sliderRef.current.next(): sliderRef.current.prev()\r\n\r\n    // 最新的索引\r\n    let newIndex = isNext ? selectIndex + 1: selectIndex - 1\r\n    const length = itemData.picture_urls.length\r\n    if (newIndex < 0) newIndex = length - 1\r\n    if (newIndex > length - 1) newIndex = 0\r\n    setSelectIndex(newIndex)\r\n\r\n    // 阻止事件冒泡\r\n    event.stopPropagation()\r\n  }\r\n\r\n  function itemClickHandle() {\r\n    if (itemClick) itemClick(itemData)\r\n  }\r\n\r\n  /** 子元素的赋值 */\r\n  const pictureElement = (\r\n    <div className='cover'>\r\n      <img src={itemData.picture_url} alt=\"\" />\r\n    </div>\r\n  )\r\n\r\n  const sliderElement = (\r\n    <div className='slider'>\r\n      <div className='control'>\r\n        <div className='btn left' onClick={e => controlClickHandle(false, e)}>\r\n          <IconArrowLeft width=\"30\" height=\"30\"/>\r\n        </div>\r\n        <div className='btn right' onClick={e => controlClickHandle(true, e)}>\r\n          <IconArrowRight width=\"30\" height=\"30\"/>\r\n        </div>\r\n      </div>\r\n      <div className='indicator'>\r\n        <Indicator selectIndex={selectIndex}>\r\n          {\r\n            itemData?.picture_urls?.map((item, index) => {\r\n              return (\r\n                <div className=\"item\" key={item}>\r\n                  <span className={classNames(\"dot\", { active: selectIndex === index })}></span>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </Indicator>\r\n      </div>\r\n      <Carousel dots={false} ref={sliderRef}>\r\n        {\r\n          itemData?.picture_urls?.map(item => {\r\n            return (\r\n              <div className='cover' key={item}>\r\n                <img src={item} alt=\"\" />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Carousel>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <ItemWrapper\r\n      verifyColor={itemData?.verify_info?.text_color || \"#39576a\"}\r\n      itemWidth={itemWidth}\r\n      onClick={itemClickHandle}\r\n    >\r\n      <div className='inner'>\r\n        { !itemData.picture_urls ? pictureElement: sliderElement }\r\n        <div className='desc'>\r\n          {itemData.verify_info.messages.join(\" · \")}\r\n        </div>\r\n        <div className='name'>{itemData.name}</div>\r\n        <div className='price'>¥{itemData.price}/晚</div>\r\n\r\n        <div className='bottom'>\r\n          <Rating\r\n            value={itemData.star_rating ?? 5}\r\n            precision={0.1}\r\n            readOnly\r\n            sx={{ fontSize: \"12px\", color: \"#00848A\", marginRight: \"-1px\" }}\r\n          />\r\n          <span className='count'>{itemData.reviews_count}</span>\r\n          {\r\n            itemData.bottom_info && <span className='extra'>·{itemData.bottom_info?.content}</span>\r\n          }\r\n        </div>\r\n      </div>\r\n    </ItemWrapper>\r\n  )\r\n})\r\n\r\nRoomItem.propTypes = {\r\n  itemData: PropTypes.object\r\n}\r\n\r\nexport default RoomItem","import styled from \"styled-components\";\r\n\r\nexport const EntireWrapper = styled.div`\r\n  \r\n`","import styled from \"styled-components\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  position: fixed;\r\n  top: 80px;\r\n  z-index: 99;\r\n  left: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 48px;\r\n  padding-left: 16px;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  background-color: #fff;\r\n  .filter {\r\n    display: flex;\r\n    .item {\r\n      margin: 0 4px 0 8px;\r\n      padding: 6px 12px;\r\n      border: 1px solid #dce0e0;\r\n      border-radius: 4px;\r\n      color: #484848;\r\n      cursor: pointer;\r\n      &.active {\r\n        background: #008489;\r\n        border: 1px solid #008489;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n`","import React, {memo, useState} from 'react'\r\nimport {FilterWrapper} from \"@/views/entire/c-cpns/entire-filter/style\";\r\nimport filterData from \"@/assets/data/filter_data.json\"\r\nimport classNames from \"classnames\";\r\n\r\nconst EntireFilter = memo(() => {\r\n  const [selectItems, setSelectItems] = useState([])\r\n\r\n  function itemClickHandle(item) {\r\n    const newItems = [...selectItems]\r\n    if (newItems.includes(item)) { // 移除操作\r\n      const itemIndex = newItems.findIndex(filterItem => filterItem === item)\r\n      newItems.splice(itemIndex, 1)\r\n    } else { // 添加操作\r\n      newItems.push(item)\r\n    }\r\n    setSelectItems(newItems)\r\n  }\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <div className=\"filter\">\r\n        {\r\n          filterData.map((item) => {\r\n            return (\r\n              <div\r\n                className={classNames(\"item\", {active: selectItems.includes(item)})}\r\n                key={item}\r\n                onClick={e => itemClickHandle(item)}\r\n              >\r\n                {item}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </FilterWrapper>\r\n  )\r\n})\r\n\r\nexport default EntireFilter","import styled from \"styled-components\";\r\n\r\nexport const RoomsWrapper = styled.div`\r\n  position: relative;\r\n  padding: 30px 20px;\r\n  margin-top: 128px;\r\n  .title {\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    color: #222;\r\n    margin: 0 0 10px 10px;\r\n  }\r\n  .list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  > .cover {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(255,255,255,.8);\r\n  }\r\n`","import React, {memo, useCallback} from 'react'\r\nimport {RoomsWrapper} from \"@/views/entire/c-cpns/entire-rooms/style\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport RoomItem from \"@/components/room-item\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {changeDetailInfoAction} from \"@/store/modules/detail\";\r\n\r\nconst EntireRooms = memo(() => {\r\n  /** 从redux中获取roomList数据 */\r\n  const { roomList, totalCount, isLoading } = useSelector((state) => ({\r\n    roomList: state.entire.roomList,\r\n    totalCount: state.entire.totalCount,\r\n    isLoading: state.entire.isLoading\r\n  }), shallowEqual)\r\n\r\n  /** 事件处理 */\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const itemClickHandle = useCallback((item) => {\r\n    dispatch(changeDetailInfoAction(item))\r\n    navigate(\"/detail\")\r\n  }, [navigate, dispatch])\r\n\r\n  return (\r\n    <RoomsWrapper>\r\n      <h2 className='title'>{totalCount}多处住所</h2>\r\n      <div className='list'>\r\n        {\r\n          roomList.map((item) => {\r\n            return (\r\n              <RoomItem\r\n                itemData={item}\r\n                itemWidth=\"20%\"\r\n                key={item._id}\r\n                itemClick={itemClickHandle}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n      { isLoading && <div className='cover'></div> }\r\n    </RoomsWrapper>\r\n  )\r\n})\r\n\r\nexport default EntireRooms","import styled from \"styled-components\";\r\n\r\nexport const PaginationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  .info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .MuiPaginationItem-icon {\r\n      font-size: 24px;\r\n    }\r\n\r\n    .MuiPaginationItem-page {\r\n      margin: 0 9px;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    .MuiPaginationItem-page.Mui-selected {\r\n      background-color: #222;\r\n      color: #fff;\r\n    }\r\n\r\n    .desc {\r\n      margin-top: 16px;\r\n      color: #222;\r\n    }\r\n  }\r\n`","import JLRequest from \"../index\"\r\n\r\nexport function getEntireRoomList(offset=0,size=20){\r\n  return JLRequest.get({\r\n    url: \"/entire/list\",\r\n    params: {\r\n      offset,\r\n      size\r\n    }\r\n  })\r\n}","import * as actionTypes from \"./constants\"\r\nimport {getEntireRoomList} from \"@/services/modules/entire\";\r\n\r\nexport const changeCurrentPageAction = (currentPage) => ({\r\n  type: actionTypes.CHANGE_CURRENT_PAGE,\r\n  currentPage\r\n})\r\n\r\nexport const changeRoomListAction = (roomList) => ({\r\n  type: actionTypes.CHANGE_ROOM_LIST,\r\n  roomList\r\n})\r\n\r\nexport const changeTotalCountAction = (totalCount) => ({\r\n  type: actionTypes.CHANGE_TOTAL_COUNT,\r\n  totalCount\r\n})\r\n\r\nexport const changeIsLoadingAction = (isLoading) => ({\r\n  type: actionTypes.CHANGE_IS_LOADING,\r\n  isLoading\r\n})\r\n\r\nexport const fetchRoomListAction = (page = 0) => {\r\n  // 返回新的函数\r\n  return async (dispatch, getState) => {\r\n    // 0. 修改currentPage\r\n    dispatch(changeCurrentPageAction(page))\r\n    // 1. 根据页码获取最新的数据\r\n    // const currentPage = getState().entire.currentPage\r\n    dispatch(changeIsLoadingAction(true))\r\n    const res = await getEntireRoomList(page * 20)\r\n    dispatch(changeIsLoadingAction(false))\r\n    // 2.获取到最新的数据，保存redux的store中\r\n    const roomList = res.list\r\n    const totalCount = res.totalCount\r\n    dispatch(changeRoomListAction(roomList))\r\n    dispatch(changeTotalCountAction(totalCount))\r\n\r\n  }\r\n}","import React, {memo} from 'react'\r\nimport {PaginationWrapper} from \"@/views/entire/c-cpns/entire-pagination/style\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchRoomListAction} from \"@/store/modules/entire/actionCreators\";\r\n\r\nconst EntirePagination = memo((props) => {\r\n  const {totalCount, currentPage, roomList} = useSelector((state) => ({\r\n    totalCount: state.entire.totalCount,\r\n    currentPage: state.entire.currentPage,\r\n    roomList: state.entire.roomList\r\n  }),shallowEqual)\r\n  const totalPage = Math.ceil(totalCount / 20)\r\n  const startCount = currentPage * 20 + 1\r\n  const endCount = (currentPage + 1) * 20\r\n\r\n  // 事件处理的逻辑\r\n  const dispatch = useDispatch()\r\n\r\n  function pageChangeHandle(event, pageCount) {\r\n    // 回到顶部\r\n    window.scrollTo(0,0)\r\n    // 更新最新的页码：redux => currentPage\r\n    // dispatch(changeCurrentPageAction(pageCount - 1))\r\n    dispatch(fetchRoomListAction(pageCount - 1))\r\n  }\r\n\r\n  return (\r\n    <PaginationWrapper>\r\n      {\r\n        !!roomList.length && (\r\n          <div className=\"info\">\r\n            <Pagination count={totalPage} onChange={pageChangeHandle}/>\r\n            <div className=\"desc\">\r\n              第 {startCount} - {endCount} 个房源，共超过{totalCount}个\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </PaginationWrapper>\r\n  )\r\n})\r\nEntirePagination.propTypes = {}\r\nexport default EntirePagination","import React, {memo, useEffect} from 'react'\r\nimport {EntireWrapper} from \"@/views/entire/style\";\r\nimport EntireFilter from \"@/views/entire/c-cpns/entire-filter\";\r\nimport EntireRooms from \"@/views/entire/c-cpns/entire-rooms\";\r\nimport EntirePagination from \"@/views/entire/c-cpns/entire-pagination\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchRoomListAction} from \"@/store/modules/entire/actionCreators\";\r\nimport {changeHeaderConfigAction} from \"@/store/modules/main\";\r\n\r\nconst Entire  = memo(() => {\r\n  // 发送网络请求\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(fetchRoomListAction())\r\n    dispatch(changeHeaderConfigAction({isFixed: true, topAlpha: false}))\r\n  },[dispatch])\r\n  return (\r\n    <EntireWrapper>\r\n      <EntireFilter/>\r\n      <EntireRooms/>\r\n      <EntirePagination/>\r\n    </EntireWrapper>\r\n  )\r\n})\r\n\r\nexport default Entire"],"names":["IconArrowLeft","memo","props","width","height","viewBox","role","focusable","style","styleStrToObj","d","fillRule","IconArrowRight","IndicatorWrapper","styled","selectIndex","contentRef","useRef","useEffect","selectItemEl","current","children","itemLeft","offsetLeft","itemWidth","clientWidth","contentWidth","distance","totalDistance","scrollWidth","transform","className","ref","ItemWrapper","verifyColor","theme","text","primaryColor","RoomItem","itemData","itemClick","useState","setSelectIndex","sliderRef","controlClickHandle","isNext","event","next","prev","newIndex","length","picture_urls","stopPropagation","pictureElement","src","picture_url","alt","sliderElement","onClick","e","map","item","index","classNames","active","dots","verify_info","text_color","messages","join","name","price","Rating","value","star_rating","precision","readOnly","sx","fontSize","color","marginRight","reviews_count","bottom_info","content","EntireWrapper","FilterWrapper","selectItems","setSelectItems","filterData","includes","newItems","itemIndex","findIndex","filterItem","splice","push","itemClickHandle","RoomsWrapper","useSelector","state","roomList","entire","totalCount","isLoading","shallowEqual","navigate","useNavigate","dispatch","useDispatch","useCallback","changeDetailInfoAction","_id","PaginationWrapper","getEntireRoomList","offset","size","JLRequest","url","params","changeCurrentPageAction","currentPage","type","actionTypes","changeRoomListAction","changeTotalCountAction","changeIsLoadingAction","fetchRoomListAction","page","getState","res","list","totalPage","Math","ceil","startCount","endCount","Pagination","count","onChange","pageCount","window","scrollTo","changeHeaderConfigAction","isFixed","topAlpha"],"sourceRoot":""}